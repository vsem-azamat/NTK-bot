from datetime import datetime, timedelta

from aiogram import types
from aiogram.dispatcher.filters import Command

from bot import dp, bot
from configs import config, NtkGroup, BlackList 
from parse_functions import get_duplex_events, get_ntk_quantity, make_day_graph


@dp.message_handler(Command("ntk", prefixes='!/'), NtkGroup())
async def ntk(msg: types.Message):
    q = await get_ntk_quantity()
    text = f'üìö–í NTK —Å–µ–π—á–∞—Å –ª—é–¥–µ–π: {q}'
    if int(q) >= 700:
        text += '\n–î–æ—Ö—É—è –∫—Ä—á.'
    await msg.answer(text)
    await msg.delete()


@dp.message_handler(Command('help', prefixes='!/'), NtkGroup())
async def ask_ntk(msg: types.Message):
    text = \
    "<b>–•–∞–π, —è —Å–æ–∑–¥–∞–Ω –¥–ª—è —á–∞—Ç–∞ @chat_ntk!</b>\n\n"\
    "–ö–æ–º–∞–Ω–¥—ã:\n"\
    "/ntk - –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª-–≤–æ –ª—é–¥–µ–π –≤ NTK\n"\
    "/duplex - Duplex Events <i>(–±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)</i>\n"\
    "/anon <text> -  –ü—Ä–∏—Å–ª–∞—Ç—å –≤ @chat_ntk –∞–Ω–æ–Ω–∏–º–∫—É\n"\
    "/int - –ü–æ–ø—Ä–æ—Å–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–Ω—Å—Ç—É.\n\n"\
    "admin: t.me/vsem_azamat"

    await msg.answer(text, disable_web_page_preview=True)
    await msg.delete()


@dp.message_handler(Command('inst', prefixes='!/'), BlackList())
async def get_me_inst(msg: types.Message):
    if msg.reply_to_message:
        text = "–î–∞–π –∏–Ω—Å—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞. \n–ú–Ω–µ –¥–ª—è –¥—Ä—É–≥–∞ –±–æ—Ç–∞. \n–û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å :3"
        await msg.reply_to_message.reply(text)
    await msg.delete()


@dp.message_handler(Command('anon', prefixes='!/'), BlackList())
async def anon_old(msg: types.Message):
    text = \
        "<b>–ü—Ä–∏–≤–µ—Ç! –Ø —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–º–µ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å —Ç–µ–±—è –æ –≤—ã–Ω—É–∂–¥–µ–Ω—ã—Ö –Ω–æ–≤–æ–≤–≤–µ–¥–µ–Ω–∏—è—Ö...</b>\n\n"\
        "–¢–µ–ø–µ—Ä—å –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç! –í –±–æ—Ç–µ –µ—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ black —Å–ª–æ–≤, "\
        "–ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö, –±–æ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —à–ª—ë—Ç –µ–≥–æ –º–Ω–µ, –∞ –Ω–µ –≤ —á–∞—Ç - "\
        "–∏ —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —è —Å–º–æ–≥—É —É–≤–∏–¥–µ—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.\n\n"\
        "–ï—Å–ª–∏ –≤ –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–∞—Ç—ã (–æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è), –º–æ–∂–µ—Ç–µ –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è!\n\n"\
        "<b>–ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞:</b>\n"\
        "/–∞–Ω–æ–Ω '—Ç—É—Ç –∞–Ω–æ–Ω–∏–º–Ω—ã–π —Ç–µ–∫—Å—Ç'"

    await msg.answer(text)
        

@dp.message_handler(Command('–∞–Ω–æ–Ω', prefixes='!/'), BlackList())
async def anon_message(msg: types.Message):    
    text_anon = msg.text[6:]

    if msg.chat.id == msg.from_user.id:
        if 1 < len(text_anon) < 1000:
            # filter for bad words
            for word in config.BAD_WORDS:
                if word in text_anon:
                    await bot.send_message(
                            chat_id=268388996,
                            text=f"id: {msg.from_user.id} \nlogin: @{msg.from_user.username} \n\ntext:\n{text_anon}"
                            )
                    await msg.answer("–¢—ã —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –ø–ª–æ—Ö–æ–µ((\n–Ø –≤—ã–Ω—É–∂–¥–µ–Ω —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —ç—Ç–æ –∞–¥–º–∏–Ω—É.")
                    return
            text = "üíå<b>–ê–Ω–æ–Ω –ø–ª—Å:</b>\n\n" + text_anon
            await bot.send_message(chat_id=config.ID_NTK_BIG_CHAT, text=text)
            await msg.reply('üíå–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')
        else: await msg.answer('–¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π, –ª–∏–±–æ –Ω–∞–æ–±–æ—Ä–æ—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π!')
    else: await msg.delete()


@dp.message_handler(Command('duplex', prefixes='!/'), NtkGroup())
async def gen_duplex(msg: types.Message):
    text = await get_duplex_events()
    await msg.answer(text, disable_web_page_preview=True)
    await msg.delete()


@dp.message_handler(Command('graph', prefixes='!/'))
async def send_stats(msg: types.Message):
    image = await make_day_graph()
    await bot.send_photo(
        chat_id=msg.from_user.id,
        photo=types.InputFile(image, filename='graph')
    )
    